{
  "name": "CScriptSIT",
  "scopeName": "source.cscriptsit",
  "fileTypes": ["sit"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#hash-line"
    },
    {
      "include": "#hash-numbers"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#keyword-with-string"
    },
    {
      "include": "#keyword-with-special-args"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#filenames"
    },
    {
      "include": "#special-variables"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.cscriptsit",
          "match": "//.*$"
        },
        {
          "name": "comment.block.cscriptsit",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "hash-line": {
      "patterns": [
        {
          "name": "markup.italic.hash-line.cscriptsit",
          "match": "#.*$"
        }
      ]
    },
    "keyword-with-string": {
      "patterns": [
        {
          "match": "(?i)(\\$(?:sit_testreportstart|sit_testcasestart|sit_testcaseinitcond|sit_teststepstart|sit_testsubstepstart|sit_testuseraction|sit_teststrategy|sit_procedure|sit_runscript|sit_materials|sit_additionalmaterials|sit_traceability|sit_addnote|sit_print|cs_print|cs_echo))\\s+(\"[^\"]*\")",
          "captures": {
            "1": {
              "name": "entity.name.function.bold.teststart.cscriptsit"
            },
            "2": {
              "name": "string.quoted.double.bold.cscriptsit"
            }
          }
        }
      ]
    },
    "keyword-with-special-args": {
      "patterns": [
        {
          "match": "(?i)(\\$(?:sit_checktestresulteq|sit_comparebyteseq|sit_compareptfilecontenteq|sit_checkbits|sit_verifyresult))\\s+(![a-zA-Z_][a-zA-Z0-9_.]*)",
          "captures": {
            "1": {
              "name": "entity.name.function.bold.verification.cscriptsit"
            },
            "2": {
              "name": "variable.special.exclamation.cscriptsit"
            }
          }
        }
      ]
    },
    "special-variables": {
      "patterns": [
        {
          "name": "variable.special.exclamation.cscriptsit",
          "match": "![^,\\s]+"
        }
      ]
    },
    "hash-numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hash.cscriptsit",
          "match": "#[^,\\s]+"
        }
      ]
    },
    "filenames": {
      "patterns": [
        {
          "name": "entity.name.filename.cscriptsit",
          "match": "\\b[A-Za-z][A-Za-z0-9_\\-]*(?:\\.[a-zA-Z0-9]+)?\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.cscriptsit",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.cscriptsit",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex.cscriptsit",
          "match": "\\b0[xX][0-9A-Fa-f]+\\b"
        },
        {
          "name": "constant.numeric.decimal.cscriptsit",
          "match": "\\b[0-9]+\\.?[0-9]*\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bold.cscriptsit",
          "match": "(?i)\\$(sit_if|sit_ifdef|sit_ifdef_else|sit_ifdef_end|sit_ifelse|sit_ifend|sit_elseifdef|sit_loop|sit_loopend)\\b"
        },
        {
          "name": "entity.name.function.bold.teststart.cscriptsit",
          "match": "(?i)\\$(sit_testcasestart|sit_testcaseinitcond|sit_testreportstart|sit_teststepstart|sit_testsubstepstart|sit_testuseraction|sit_teststrategy|sit_procedure|sit_runscript|sit_materials|sit_additionalmaterials|sit_traceability|sit_addnote|sit_print|cs_print|cs_echo)\\b"
        },
        {
          "name": "entity.name.function.bold.testend.cscriptsit",
          "match": "(?i)\\$(sit_testcaseend|sit_testreportend|sit_teststepend|sit_TestCaseFailOnNfcFailure)\\b"
        },
        {
          "name": "entity.name.function.bold.verification.cscriptsit",
          "match": "(?i)\\$(sit_verifyresult|sit_verifyresultpending|sit_checkbits|sit_checktestresulteq|sit_comparebyteseq|sit_compareptfilecontenteq)\\b"
        },
        {
          "name": "entity.name.function.bold.analyzer.cscriptsit",
          "match": "(?i)\\$(sit_LogicAnalyzerStart|sit_LogicAnalyzerStop|sit_LogicAnalyzerSave|sit_LogicAnalyzerConfigure|sit_bleanalyzerstart|sit_bleanalyzerstop)\\b"
        },
        {
          "name": "entity.name.function.bold.action.cscriptsit",
          "match": "(?i)\\$(sit_delay|sit_delaytime|sit_input|sit_exit|sit_starttimer|sit_scripttimestart|sit_scripttimestop)\\b"
        },
        {
          "name": "entity.name.function.bold.data.cscriptsit",
          "match": "(?i)\\$(sit_esteffort|sit_revieweffort)\\b"
        },
        {
          "name": "entity.name.function.bold.utility.cscriptsit",
          "match": "(?i)\\$(sit_clear|sit_clearpatchdata|sit_isbitset|sit_isbitclear|sit_loadptuoutputfile|sit_getpassfailfromuser|sit_getpassfailfromuserwithinput|sit_yesno|sit_waitforlifecount|sit_waitforoneminnot1|sit_waitforuseraction)\\b"
        },
        {
          "name": "entity.name.function.bold.mfg.cscriptsit",
          "match": "(?i)\\$(sit_mfgdataread|sit_mfgdatawrite|sit_mfgdatasetvar|sit_mfgdatarestoredefault)\\b"
        },
        {
          "name": "entity.name.function.bold.cs.cscriptsit",
          "match": "(?i)\\$(cs_cslog|cs_exit|cs_pause)\\b"
        },
        {
          "name": "constant.language.boolean.cscriptsit",
          "match": "(?i)\\b(Yes|No|none|continue)\\b"
        },
        {
          "name": "keyword.other.special.cscriptsit",
          "match": "^\\s*completions:\\s*$"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.comparison.cscriptsit",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.logical.cscriptsit",
          "match": "&&|\\|\\||!"
        },
        {
          "name": "keyword.operator.assignment.cscriptsit",
          "match": "="
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.cscriptsit",
          "match": "(?i)\\b(True|False|Null)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.cscriptsit",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}